!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,i(a.key),a)}}function i(e){var t=function(e,t){if("object"!=a(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==a(t)?t:t+""}n.r(t);var o=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)},n=[{key:"downloadURI",value:function(e,t){var n=document.createElement("a");n.download=t,n.href=e,n.click()}},{key:"slug",value:function(e){return e.toLowerCase().replace(/ /g,"-").replace(/[^\w-]+/g,"")}}],(t=null)&&r(e.prototype,t),n&&r(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,n}();function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,u(a.key),a)}}function u(e){var t=function(e,t){if("object"!=s(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=s(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==s(t)?t:t+""}var c=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.tab=t,this.index=n}return t=e,a=[{key:"createNode",value:function(t,n){return new e(t,n).getNode()}}],(n=[{key:"getNode",value:function(){var e=o.slug(this.tab.name),t=document.createElement("li"),n=document.createElement("a");return n.className="nav-link",0==this.index&&n.classList.add("active"),n.id=e+"-tab",n.setAttribute("data-toggle","tab"),n.setAttribute("aria-controls",e),n.setAttribute("role","tab"),n.setAttribute("aria-selected",0==this.index?"true":"false"),n.href="#"+e,n.setAttribute("data-index",this.index),n.textContent=this.tab.name.toUpperCase(),t.className="nav-item",t.appendChild(n),t}}])&&l(t.prototype,n),a&&l(t,a),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n,a}();function d(e){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,p(a.key),a)}}function p(e){var t=function(e,t){if("object"!=d(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=d(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==d(t)?t:t+""}var y=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.tab=t,this.index=n}return t=e,a=[{key:"createNode",value:function(t,n){return new e(t,n).getNode()}}],(n=[{key:"getNode",value:function(){var e=o.slug(this.tab.name),t=document.createElement("div");t.className="tab-pane fade",0==this.index&&(t.classList.add("show"),t.classList.add("active")),t.id=e,t.setAttribute("role","tabpanel"),t.setAttribute("aria-labelledby",e+"-tab");var n=document.createElement("div");n.className="form p-3",t.appendChild(n);var a=document.createElement("div");a.className="float-right mt-1",a.innerHTML='<button type="button" class="btn btn-default reset_demo"><i class="fas fa-sync-alt mr-2"></i></button>',n.appendChild(a);var r=document.createElement("div");r.className="float-right mt-1",r.innerHTML='<button type="button" class="btn btn-default edit_demo" data-toggle="modal" data-target="#editAppModal"><i class="fas fa-cog mr-2"></i></button>',n.appendChild(r);var i=document.createElement("div");if(i.className="float-right mt-1",i.innerHTML='<a href="https://github.com/THEOplayer/samples-html5-sdk/tree/master/reference-apps/uplynk-app" target="_blank" type="button" class="btn btn-default"><i class="fab fa-github mr-2"></i></a>',n.appendChild(i),this.tab.config&&this.tab.config.general){var s=this.tab.config.general,l=document.createElement("p");if(l.className="text-muted mt-2",l.setAttribute("data-local","general"),l.textContent="General",n.appendChild(l),s.indexOf("coming-up-notification")>-1){var u=document.createElement("div");u.className="switch",u.innerHTML='<label><input id="'+e+'_contentNotification" type="checkbox" data-uplynkconfig="contentNotification" checked><span data-local="cun">Coming up notification</span></label>',n.appendChild(u)}if(s.indexOf("ad-notification")>-1){var c=document.createElement("div");c.className="switch",c.innerHTML='<label><input id="'+e+'_adNotification" type="checkbox" data-uplynkconfig="adNotification" checked><span data-local="an">Ad notification</span></label>',n.appendChild(c)}if(s.indexOf("show-asset-markers")>-1){var d=document.createElement("div");d.className="switch",d.innerHTML='<label><input id="'+e+'_assetMarkers" type="checkbox" data-uplynkconfig="assetMarkers" checked><span data-local="am">Show asset markers</span></label>',n.appendChild(d)}if(s.indexOf("show-ad-break-markers")>-1){var f=document.createElement("div");f.className="switch",f.innerHTML='<label><input id="'+e+'_adBreakMarkers" type="checkbox" data-uplynkconfig="adBreakMarkers" checked><span data-local="abm">Show ad break markers</span></label>',n.appendChild(f)}}if(this.tab.config&&this.tab.config["skip-offset"]){var p=document.createElement("div");p.className="form",p.innerHTML='<div class="form-group"><label for="'+e+'_skipOffset" data-local="so">Skip Offset</label><input type="number" class="form-control" id="'+e+'_skipOffset" placeholder="'+this.tab.config["skip-offset"]+'" min="-1" max="15" ></div>',n.appendChild(p)}if(this.tab.config&&this.tab.config["seek-over-ad"]){this.tab.config["seek-over-ad"];var y=document.createElement("p");y.className="text-muted mt-2",y.setAttribute("data-local","soa"),y.textContent="Seek over Ad",n.appendChild(y);var m=document.createElement("form");m.innerHTML='<div class="form-group pt-0">\n                                    <div class="radio form-check-inline">\n                                        <label>\n                                            <input type="radio" name="optionsRadios" id="'+e+'_optionsRadios1"\n                                                value="play-all" checked>\n                                             <span data-local="pa">Play all</span>\n                                        </label>\n                                    </div>\n                                    <div class="radio form-check-inline">\n                                        <label>\n                                            <input type="radio" name="optionsRadios" id="'+e+'_optionsRadios2"\n                                                value="play-none">\n                                            <span data-local="pn">Play none</span>\n                                        </label>\n                                    </div>\n                                    <div class="radio form-check-inline">\n                                        <label>\n                                            <input type="radio" name="optionsRadios" id="'+e+'_optionsRadios3"\n                                                value="play-last">\n                                            <span data-local="pl">Play last</span>\n                                        </label>\n                                    </div>\n                                </div>',n.appendChild(m)}if(this.tab.config&&this.tab.config.queue){var v=document.createElement("button");v.className="btn btn-default w-100 text-left",v.setAttribute("data-toggle","collapse"),v.href="#playlist_"+e,v.textContent="Queue",v.setAttribute("aria-expanded","true"),v.setAttribute("aria-controls","playlist_"+e),t.appendChild(v);var b=document.createElement("div");b.className="collapse show",b.id="playlist_"+e,t.appendChild(b)}return t}}])&&f(t.prototype,n),a&&f(t,a),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n,a}();function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,b(a.key),a)}}function b(e){var t=function(e,t){if("object"!=m(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=m(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==m(t)?t:t+""}var h=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)},n=[{key:"createAll",value:function(e){for(var t=0;t<e.length;t++)this.insertTab(e[t],t)}},{key:"insertTab",value:function(e,t){var n=document.querySelector("#myTab"),a=c.createNode(e,t);n.appendChild(a);var r=document.querySelector("#myTabContent"),i=y.createNode(e,t);r.appendChild(i)}},{key:"destroyAll",value:function(){document.querySelector("#myTab").innerHTML="",document.querySelector("#myTabContent").innerHTML=""}}],(t=null)&&v(e.prototype,t),n&&v(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,n}();function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function k(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,S(a.key),a)}}function S(e){var t=function(e,t){if("object"!=g(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=g(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==g(t)?t:t+""}var w=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)},n=[{key:"localizeAppAppCopyright",value:function(e,t){var n=this.getLanguageFromQueryParams()||t;if(n){var a=this.getAppLocalizationMap();for(var r in a){var i=document.querySelectorAll('[data-local="'+r+'"]');if(a[r][n]&&i&&i.length>0)for(var o=0;o<i.length;o++)i[o].innerText=a[r][n]}}}},{key:"getAppLocalizationMap",value:function(){return{general:{en:"General",es:"Configuración",ja:"構成",nl:"Algemeen"},cun:{en:"Coming up notification",es:"Notificación de contenido",ja:"コンテンツ通知",nl:"Video notificatie"},am:{en:"Show asset markers",es:"Marcadores de activos",ja:"アセットマーカー",nl:"Video markeringen"},an:{en:"Ad notification",es:"Notificación de publicidad",ja:"広告通知",nl:"Advertentie notificatie"},queue:{en:"Queue",es:"Cola",ja:"キュー",nl:"Lijst"},abm:{en:"Show ad break markers",es:"Marcadores publicitarios",ja:"広告マーカー",nl:"Advertentie markeringen"},so:{en:"Skip Offset",es:"Saltar desplazamiento",ja:"オフセットをスキップ",nl:"Advertenties Overslaan"},soa:{en:"Seek Over Ad",es:"Buscar Anuncio",ja:"広告を探す",nl:"Zoeken Voorbij Ads"},pa:{en:"Play all",es:"Todos",ja:"すべて",nl:"Alle"},pn:{en:"Play none",es:"Ninguna",ja:"なし",nl:"Geen"},pl:{en:"Play last",es:"Última",ja:"最終",nl:"Laatste"},configuration:{en:"Configuration",es:"Configuración",ja:"構成",nl:"Instellingen"},download:{en:"Download",es:"Descargar",ja:"ダウンロード",nl:"Download"},reset:{en:"Reset",es:"Reiniciar",ja:"リセット",nl:"Herstellen"},save:{en:"Save changes",es:"Salvar",ja:"セーブ",nl:"Opslaan"}}}},{key:"getLanguageFromQueryParams",value:function(){var e=function(e){var t=window.location.href;e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}("lang");return e&&e.toLowerCase()}},{key:"getSelectedLanguage",value:function(e,t){var n=this.getLanguageFromQueryParams()||t,a=this.getVjsLanguage(n);return a&&THEOplayer.videojs.addLanguage(n,a),a&&n}},{key:"getVjsLanguage",value:function(e){return{es:{Play:"Reproducción",Pause:"Pausa","Current Time":"Tiempo reproducido","Duration Time":"Duración total","Remaining Time":"Tiempo restante","Stream Type":"Tipo de secuencia",LIVE:"DIRECTO",Loaded:"Cargado",Progress:"Progreso",Fullscreen:"Pantalla completa","Non-Fullscreen":"Pantalla no completa",Mute:"Silenciar",Unmute:"No silenciado","Playback Rate":"Velocidad de reproducción",Subtitles:"Subtítulos","subtitles off":"Subtítulos desactivados",Captions:"Subtítulos especiales","captions off":"Subtítulos especiales desactivados",Chapters:"Capítulos","You aborted the media playback":"Ha interrumpido la reproducción del vídeo.","A network error caused the media download to fail part-way.":"Un error de red ha interrumpido la descarga del vídeo.","The media could not be loaded, either because the server or network failed or because the format is not supported.":"No se ha podido cargar el vídeo debido a un fallo de red o del servidor o porque el formato es incompatible.","The media playback was aborted due to a corruption problem or because the media used features your browser did not support.":"La reproducción de vídeo se ha interrumpido por un problema de corrupción de datos o porque el vídeo precisa funciones que su navegador no ofrece.","No compatible source was found for this media.":"No se ha encontrado ninguna fuente compatible con este vídeo.",Settings:"Configuración"},ja:{Play:"再生",Pause:"一時停止","Current Time":"現在の時間","Duration Time":"長さ","Remaining Time":"残りの時間","Stream Type":"ストリームの種類",LIVE:"ライブ",Loaded:"ロード済み",Progress:"進行状況",Fullscreen:"フルスクリーン","Non-Fullscreen":"フルスクリーン以外",Mute:"ミュート",Unmute:"ミュート解除","Playback Rate":"再生レート",Subtitles:"サブタイトル","subtitles off":"サブタイトル オフ",Captions:"キャプション","captions off":"キャプション オフ",Chapters:"チャプター","You aborted the media playback":"動画再生を中止しました","A network error caused the media download to fail part-way.":"ネットワーク エラーにより動画のダウンロードが途中で失敗しました","The media could not be loaded, either because the server or network failed or because the format is not supported.":"サーバーまたはネットワークのエラー、またはフォーマットがサポートされていないため、動画をロードできませんでした","The media playback was aborted due to a corruption problem or because the media used features your browser did not support.":"破損の問題、またはお使いのブラウザがサポートしていない機能が動画に使用されていたため、動画の再生が中止されました","No compatible source was found for this media.":"この動画に対して互換性のあるソースが見つかりませんでした",Settings:"構成"},nl:{Play:"Afspelen",Pause:"Pauze","Current Time":"Huidige tijd","Duration Time":"Looptijd","Remaining Time":"Resterende tijd","Stream Type":"Streamtype",LIVE:"LIVE",Loaded:"Geladen",Progress:"Status",Fullscreen:"Volledig scherm","Non-Fullscreen":"Geen volledig scherm",Mute:"Geluid uit",Unmute:"Geluid aan","Playback Rate":"Weergavesnelheid",Subtitles:"Ondertiteling","subtitles off":"ondertiteling uit",Captions:"Bijschriften","captions off":"bijschriften uit",Chapters:"Hoofdstukken",Descriptions:"Beschrijvingen","descriptions off":"beschrijvingen off","You aborted the media playback":"U hebt de mediaweergave afgebroken.","A network error caused the media download to fail part-way.":"De mediadownload is mislukt door een netwerkfout.","The media could not be loaded, either because the server or network failed or because the format is not supported.":"De media kon niet worden geladen, vanwege een server- of netwerkfout of doordat het formaat niet wordt ondersteund.","The media playback was aborted due to a corruption problem or because the media used features your browser did not support.":"De mediaweergave is afgebroken vanwege beschadigde data of het mediabestand gebruikt functies die niet door uw browser worden ondersteund.","No compatible source was found for this media.":"Voor deze media is geen ondersteunde bron gevonden.","Play Video":"Video Afspelen",Close:"Sluiten","Modal Window":"Modal Venster","This is a modal window":"Dit is een modaal venster","This modal can be closed by pressing the Escape key or activating the close button.":"Dit modaal venster kan gesloten worden door op Escape te drukken of de 'sluiten' knop te activeren.",", opens captions settings dialog":", opent bijschriften instellingen venster",", opens subtitles settings dialog":", opent ondertiteling instellingen venster",", opens descriptions settings dialog":", opent beschrijvingen instellingen venster",", selected":", selected",Settings:"Instellingen"}}[e]}}],(t=null)&&k(e.prototype,t),n&&k(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,n}();function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function T(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,C(a.key),a)}}function C(e){var t=function(e,t){if("object"!=E(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=E(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==E(t)?t:t+""}var L=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.app=t,this.init()},(t=[{key:"init",value:function(){var e=this.app;this.initSaveButtonListener(),this.initResetButtonListener(),this.initDownloadButtonListener();var t=localStorage.getItem("appConfig");t&&(t=JSON.parse(t),e.appConfig=t),document.querySelector("#editAppModal textarea").value=JSON.stringify(e.appConfig,null,"\t")}},{key:"initSaveButtonListener",value:function(){var e=this.app;document.querySelector("#save-app-config").addEventListener("click",(function(t){var n=document.querySelector("#editAppModal textarea");n&&(n=JSON.parse(n.value),localStorage.setItem("appConfig",JSON.stringify(n)),h.destroyAll(),e.appConfig=n,e.init(),$(".switch").bootstrapMaterialDesign())}))}},{key:"initResetButtonListener",value:function(){document.querySelector("#reset-app-config").addEventListener("click",(function(e){localStorage.removeItem("appConfig"),location.reload()}))}},{key:"initDownloadButtonListener",value:function(){document.querySelector("#download-app-config").addEventListener("click",(function(e){var t=document.querySelector("#editAppModal textarea");if(t){t=JSON.stringify(JSON.parse(t.value),null,"\t");var n=new Blob([t],{type:"application/json"}),a=window.URL.createObjectURL(n);o.downloadURI(a,"uplynkAppConfig.json")}}))}}])&&T(e.prototype,t),n&&T(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,n}();function P(e){return(P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function j(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,A(a.key),a)}}function A(e){var t=function(e,t){if("object"!=P(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=P(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==P(t)?t:t+""}var O=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)},n=[{key:"addItem",value:function(e,t,n){var a="<button class='btn btn-default w-100 text-left mb-3' id='item_"+e.asset+"'><div class='media'><img src='"+e.poster_url+"'class='mr-3' alt='"+e.desc+"'><div class='media-body'>"+e.desc+"</div></div></button>",r=document.createElement("div");r.onclick=e.clickCallback,r.innerHTML=a;var i="playlist_"+n,o=document.getElementById(i);o&&o.appendChild(r)}},{key:"clear",value:function(e,t){var n="playlist_"+t,a=document.getElementById(n);a&&(a.innerHTML="")}},{key:"updateActiveItem",value:function(e){for(var t=document.querySelectorAll(".media"),n=0;n<t.length;n++)t[n].parentNode.classList.remove("active-asset");var a=document.querySelectorAll(".tab-pane.active .media")[e.index];a&&a.parentNode.classList.add("active-asset"),document.querySelector("#currentAssetDescription").innerText=e.resource.description}}],(t=null)&&j(e.prototype,t),n&&j(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,n}();function N(e){return(N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function x(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,M(a.key),a)}}function M(e){var t=function(e,t){if("object"!=N(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=N(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==N(t)?t:t+""}var R=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.app=t,this.theoplayerRef=void 0,this.playlist=void 0,this.adBreaks=[]},(t=[{key:"initPlayer",value:function(e){var t=this,n=this.app;t.playlist=[],O.clear(n.sourceIndex,o.slug(n.appConfig.tabs[n.sourceIndex].name)),this.theoplayerRef&&this.theoplayerRef.destroy();var a=document.querySelector(".theoplayer-container");this.createTHEOplayerInfo(a),this.theoplayerRef=new THEOplayer.Player(a,{libraryLocation:"//cdn.theoplayer.com/dash/theoplayer/",uplynk:{onSeekOverAd:n.config.uplynk.seekOverAd,ui:{contentNotification:n.config.uplynk.contentNotification,adNotification:n.config.uplynk.adNotification,assetMarkers:n.config.uplynk.assetMarkers,adBreakMarkers:n.config.uplynk.adBreakMarkers},defaultSkipOffset:n.config.uplynk.defaultSkipOffset},ui:{language:w.getSelectedLanguage(n,n.appConfig.language)},persistVolume:!0}),this.createCustomIcon(this.theoplayerRef),this.theoplayerRef.autoplay=!0,this.theoplayerRef.preload="auto";var r=this.getSource(e);if(this.isLiveStream(r)){a.classList.add("liveplayer");var i=!0;this.theoplayerRef.addEventListener("progress",(function(){var e=this.seekable.end()-this.currentTime;i&&e>60&&(this.source=this.source)})),this.theoplayerRef.uplynk.ads.adBreaks.addEventListener("addadbreak",(function(e){e.adBreak.addEventListener("adbreakbegin",(function(){i=!1})),e.adBreak.addEventListener("adbreakend",(function(){i=!0}))}))}else a.classList.contains("liveplayer")&&a.classList.remove("liveplayer");return this.theoplayerRef.uplynk.addEventListener("assetinforesponse",(function(e){t.addMetadataToPlaylist(e.response)})),this.theoplayerRef.uplynk.ads.adBreaks.addEventListener("addadbreak",(function(e){t.adBreaks.push(e.adBreak)})),this.currentAsset=-1,this.theoplayerRef.addEventListener("timeupdate",(function(){t.updateActiveAsset()})),this.updateActiveQuality(this.theoplayerRef),this.subscribeToUplynkEvents(this.theoplayerRef),this.updateFeatures(e),this.theoplayerRef.source=r,this.playerRef}},{key:"isLiveStream",value:function(e){return e.sources.assetType&&("channel"==e.sources.assetType||"event"==e.sources.assetType)}},{key:"updateActiveAsset",value:function(){var e=this.getActiveAsset();e&&e.index!=this.currentAsset&&(this.currentAsset=e.index,O.updateActiveItem(e),document.querySelector("#currentAssetDescription").innerText=e.resource.description)}},{key:"addMetadataToPlaylist",value:function(e){var t=this,n=this.app,a=this.theoplayerRef.uplynk.assets;this.playlist.length>0?e.startTime=a[this.playlist.length].startTime:e.startTime=0,e.clickCallback=function(){t.theoplayerRef.currentTime=e.startTime},this.playlist.push(e),O.addItem(e,n.sourceIndex,o.slug(n.appConfig.tabs[n.sourceIndex].name))}},{key:"getSource",value:function(e){return{sources:this.app.appConfig.tabs[e].source}}},{key:"updateSkipOffset",value:function(e){for(var t=0;t<this.adBreaks.length;t++)this.adBreaks[t].skipOffset=e}},{key:"getActiveAsset",value:function(){for(var e,t=this.theoplayerRef.currentTime,n=this.theoplayerRef.uplynk.assets,a=0;a<n.length;a++){var r=n[a];r.startTime<=t&&t<=r.endTime&&(e={type:r.isAd?"adBreak":"asset",resource:r,index:a})}return e}},{key:"getFeatures",value:function(e){return this.app.appConfig.tabs[e].features}},{key:"createCustomIcon",value:function(e){var t=THEOplayer.videojs.getComponent("Button"),n=THEOplayer.videojs.extend(t,{constructor:function(){t.apply(this,arguments);var e=document.createElement("span");function n(){e.classList.toggle("vjs-hidden")}e.className="theo-button-tooltip vjs-hidden",e.innerText="Info",this.el().addEventListener("mouseover",n),this.el().addEventListener("mouseout",n),this.el().appendChild(e)},handleClick:function(){document.querySelector(".theoplayer-info").classList.toggle("hidden")},buildCSSClass:function(){return"fa fa-info vjs-button"}});THEOplayer.videojs.registerComponent("RewindButton",n),e.ui.getChild("controlBar").addChild("RewindButton",{})}},{key:"updateActiveQuality",value:function(e){var t=this;e.videoTracks.addEventListener("addtrack",(function(e){e.track.addEventListener("activequalitychanged",(function(e){document.querySelector("#currentVideoQuality").innerText=e.quality.height+" ("+e.quality.codecs+")",t.writeEvents(JSON.stringify(e))}))}))}},{key:"clearEvents",value:function(){document.querySelector("#theoplayer-events textarea").value=""}},{key:"writeEvents",value:function(e){document.querySelector("#theoplayer-events textarea").value=e+"\n"+document.querySelector("#theoplayer-events textarea").value}},{key:"subscribeToUplynkEvents",value:function(e){var t=this;["preplayresponse","pingresponse","assetinforesponse"].forEach((function(n){e.uplynk.addEventListener(n,(function(e){t.writeEvents(JSON.stringify(e))}))})),["addasset","removeasset"].forEach((function(n){e.uplynk.assets.addEventListener(n,(function(e){t.writeEvents(JSON.stringify(e))}))})),["addadbreak","removeadbreak"].forEach((function(n){e.uplynk.ads.adBreaks.addEventListener(n,(function(e){if(t.writeEvents(JSON.stringify(e)),"addadbreak"==e.type){["adbreakbegin","adbreakend","adbreakskip","updateadbreak"].forEach((function(n){e.adBreak.addEventListener(n,(function(e){t.writeEvents(JSON.stringify(e))}))}));for(var n=function(n){["adbegin","adend","adfirstquartile","admidpoint","adthirdquartile","adcomplete"].forEach((function(a){e.adBreak.ads[n].addEventListener(a,(function(e){t.writeEvents(JSON.stringify(e))}))}))},a=0;a<e.adBreak.ads.length;a++)n(a)}}))}))}},{key:"updateFeatures",value:function(e){var t=this.getFeatures(e),n=document.querySelector("#theoplayer-uplynk-features");n.innerHTML="";for(var a=0;a<t.length;a++){var r=document.createElement("span");r.className="badge badge-pill badge-primary",r.innerText=t[a],n.appendChild(r)}}},{key:"createTHEOplayerInfo",value:function(e){e.innerHTML='<div class="theoplayer-info hidden">\n                        <div class="card">\n                            <div class="card-header" style="color: #212529">\n                                <div id="card-title-spacer">\n                                    <span id="currentAssetDescription"></span> &nbsp; <i class="fa fa-video"></i> <span id="currentVideoQuality"></span>\n                                </div>\n                                <i class="far fa-window-close"></i>\n                            </div>\n                            <div class="card-body" id="theoplayer-events">\n                                <h5 class="card-title">Events</h5>\n                                <p class="card-text">\n                                      <textarea class="">\n                                      </textarea>\n                                </p>\n                            </div>\n                            <div class="card-footer text-muted" id="theoplayer-uplynk-features">\n                            </div>\n                        </div>\n                    </div>',document.querySelector(".fa-window-close").addEventListener("click",(function(){document.querySelector(".theoplayer-info").classList.toggle("hidden")}))}}])&&x(e.prototype,t),n&&x(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,n}(),I=I||{language:"en",tabs:[{name:"Multi-Asset DRM",source:{integration:"uplynk",id:["e973a509e67241e3aa368730130a104d","e70a708265b94a3fa6716666994d877d"],contentProtected:!0,assetType:"asset",preplayParameters:{}},features:["Preplay","Asset Info","DRM","Multi-Asset"],config:{general:["coming-up-notification","show-asset-markers"],queue:!0},experimental:["preview-thumbnails"]},{name:"Ads",source:{integration:"uplynk",id:["41afc04d34ad4cbd855db52402ef210e","c6b61470c27d44c4842346980ec2c7bd","588f9d967643409580aa5dbe136697a1","b1927a5d5bd9404c85fde75c307c63ad","7e9932d922e2459bac1599938f12b272","a4c40e2a8d5b46338b09d7f863049675","bcf7d78c4ff94c969b2668a6edc64278"],contentProtected:!1,assetType:"asset",preplayParameters:{ad:"adtest","ad.lib":"15_sec_spots"}},features:["Preplay","Asset Info","Ads","Multi-Asset","SSAI"],config:{general:["coming-up-notification","ad-notification","show-asset-markers","show-ad-break-markers"],"skip-offset":"-1","seek-over-ad":"play-all",queue:!0}}]};function B(e){return(B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,_(a.key),a)}}function _(e){var t=function(e,t){if("object"!=B(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=B(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==B(t)?t:t+""}var H=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.sourceIndex=0,this.playerUtil=new R(this),this.firstLoad=!1,this.appConfig=I,this.config={uplynk:{contentNotification:!0,adNotification:!0,assetMarkers:!0,adBreakMarkers:!0,seekOverAd:"play-all",defaultSkipOffset:-1}}},(t=[{key:"init",value:function(){this.firstLoad||(this.firstLoad=!0,this.appModal=new L(this)),h.createAll(this.appConfig.tabs),this.bindControls(),w.localizeAppAppCopyright(this,this.appConfig.language),this.playerUtil.initPlayer(0)}},{key:"reset",value:function(){for(var e=this.appConfig.tabs,t=[],n=[],a=[],r=0;r<e.length;r++){var i=e[r].config,s=o.slug(e[r].name);i.general.indexOf("coming-up-notification")>-1&&t.push(s+"_contentNotification"),i.general.indexOf("ad-notification")>-1&&t.push(s+"_adNotification"),i.general.indexOf("show-asset-markers")>-1&&t.push(s+"_assetMarkers"),i.general.indexOf("show-ad-break-markers")>-1&&t.push(s+"_adBreakMarkers"),i["skip-offset"]&&n.push(s+"_skipOffset"),i["seek-over-ad"]&&a.push(s+"_optionsRadios1")}t.forEach((function(e){document.getElementById(e).checked=!0})),n.forEach((function(e){document.getElementById(e).value=-1})),a.forEach((function(e){document.getElementById(e).checked=!0})),this.config.uplynk.contentNotification=!0,this.config.uplynk.adNotification=!0,this.config.uplynk.assetMarkers=!0,this.config.uplynk.adBreakMarkers=!0,this.config.uplynk.seekOverAd="play-all",this.config.uplynk.defaultSkipOffset=-1}},{key:"bindControls",value:function(){for(var e=this,t=document.querySelectorAll("#myTab a"),n=0;n<t.length;n++)t[n].onclick=function(t){e.reset();var n=t.target.dataset.index;e.sourceIndex!==n&&(e.sourceIndex=n,e.playerUtil.initPlayer(n))};for(var a=document.forms[0].optionsRadios,r=0;r<a.length;r++)a[r].addEventListener("change",(function(t){e.config.uplynk.seekOverAd=t.srcElement.value,e.playerUtil.initPlayer(e.sourceIndex)}));for(var i=0;i<e.appConfig.tabs.length;i++){var s=document.getElementById(o.slug(e.appConfig.tabs[i].name)+"_skipOffset");s&&s.addEventListener("change",(function(t){var n=parseInt(t.target.value),a=parseInt(t.target.max);n<0&&(t.target.value=-1),n>a&&(t.target.value=a),e.config.uplynk.defaultSkipOffset=n||-1,e.playerUtil.updateSkipOffset(e.config.uplynk.defaultSkipOffset)}))}for(var l=document.querySelectorAll('#myTabContent input[type="checkbox"]'),u=0;u<l.length;u++)l[u].onclick=function(t){e.config.uplynk[t.target.dataset.uplynkconfig]=t.srcElement.checked,e.playerUtil.initPlayer(e.sourceIndex)};for(var c=document.getElementsByClassName("reset_demo"),d=0;d<c.length;d++)c[d].onclick=function(){e.reset(),e.playerUtil.initPlayer(e.sourceIndex)}}}])&&q(e.prototype,t),n&&q(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t,n}();window.App=H}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,